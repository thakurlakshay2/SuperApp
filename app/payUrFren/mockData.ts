import { User, Group, Expense, ExpenseCategory, SplitType } from "./types";

export const mockUsers: User[] = [
  {
    id: "1",
    name: "John Doe",
    email: "john@example.com",
    phone: "+1234567890",
    avatar: "https://i.pravatar.cc/150?img=1",
  },
  {
    id: "2",
    name: "Jane Smith",
    email: "jane@example.com",
    phone: "+0987654321",
    avatar: "https://i.pravatar.cc/150?img=2",
  },
  {
    id: "3",
    name: "Bob Johnson",
    email: "bob@example.com",
    phone: "+1122334455",
    avatar: "https://i.pravatar.cc/150?img=3",
  },
  {
    id: "4",
    name: "Alice Brown",
    email: "alice@example.com",
    phone: "+5566778899",
    avatar: "https://i.pravatar.cc/150?img=4",
  },
];

export const mockExpenses: Expense[] = [
  {
    id: "1",
    groupId: "1",
    description: "Rent for January",
    amount: 30000,
    paidBy: "1",
    date: new Date("2024-01-01"),
    category: ExpenseCategory.Housing,
    splitType: SplitType.Equal,
    splits: [
      { userId: "1", amount: 10000 },
      { userId: "2", amount: 10000 },
      { userId: "3", amount: 10000 },
    ],
    attachments: [],
    notes: "Monthly rent payment",
  },
  {
    id: "2",
    groupId: "1",
    description: "Groceries",
    amount: 5000,
    paidBy: "2",
    date: new Date("2024-01-05"),
    category: ExpenseCategory.Food,
    splitType: SplitType.Equal,
    splits: [
      { userId: "1", amount: 1666.67 },
      { userId: "2", amount: 1666.67 },
      { userId: "3", amount: 1666.66 },
    ],
    attachments: [],
    notes: "Weekly groceries",
  },
  {
    id: "3",
    groupId: "2",
    description: "Flight tickets",
    amount: 40000,
    paidBy: "3",
    date: new Date("2024-02-01"),
    category: ExpenseCategory.Travel,
    splitType: SplitType.Equal,
    splits: [
      { userId: "1", amount: 10000 },
      { userId: "2", amount: 10000 },
      { userId: "3", amount: 10000 },
      { userId: "4", amount: 10000 },
    ],
    attachments: [],
    notes: "Round trip to Goa",
  },
  {
    id: "4",
    groupId: "2",
    description: "Hotel booking",
    amount: 20000,
    paidBy: "4",
    date: new Date("2024-02-02"),
    category: ExpenseCategory.Travel,
    splitType: SplitType.Equal,
    splits: [
      { userId: "1", amount: 5000 },
      { userId: "2", amount: 5000 },
      { userId: "3", amount: 5000 },
      { userId: "4", amount: 5000 },
    ],
    attachments: [],
    notes: "3 nights at beach resort",
  },
];

export const mockGroups: Group[] = [
  {
    id: "1",
    name: "Roommates",
    description: "Apartment expenses",
    members: [mockUsers[0], mockUsers[1], mockUsers[2]],
    createdBy: "1",
    createdAt: new Date("2024-01-01"),
    updatedAt: new Date("2024-01-15"),
    currency: "INR",
    themeColor: "#4CAF50",
    expenses: mockExpenses.filter((expense) => expense.groupId === "1"),
  },
  {
    id: "2",
    name: "Trip to Goa",
    description: "Vacation expenses",
    members: [mockUsers[0], mockUsers[1], mockUsers[2], mockUsers[3]],
    createdBy: "2",
    createdAt: new Date("2024-02-01"),
    updatedAt: new Date("2024-02-10"),
    currency: "INR",
    themeColor: "#2196F3",
    expenses: mockExpenses.filter((expense) => expense.groupId === "2"),
  },
];
